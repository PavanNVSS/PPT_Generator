import os
import streamlit as st




def show_title():
    st.title("PPT Generator")
    st.subheader("Enter your topic of choice in psychology")

def user_inputs():
    # Display presentation name input
    ppt_name = st.text_input("Enter the name of the presentation:", placeholder="e.g., ppt1, test, powerpoint")

    # Display theme selection with design previews
    st.subheader("Choose a Theme:")
    theme = st.text_input("Enter the theme of the presentation:", placeholder="Please choose to enter a number from 1 to 10")

    # Load and display layout previews
    st.text("Preview of available designs:")
    layout_dir = "LayoutPreviews"  # Directory containing design PNGs
    col1, col2, col3 = st.columns(3)  # Create columns to arrange images
    for i in range(1, 11):  # Assuming 10 designs
        image_path = os.path.join(layout_dir, f"design{i}.png")
        if os.path.exists(image_path):
            if i % 3 == 1:
                with col1:
                    st.image(image_path, caption=f"Design {i}", use_container_width=True)
            elif i % 3 == 2:
                with col2:
                    st.image(image_path, caption=f"Design {i}", use_container_width=True)
            else:
                with col3:
                    st.image(image_path, caption=f"Design {i}", use_container_width=True)

    # Display slide count input
    slide_count = st.number_input(
        "Enter the number of slides:",
        min_value=1,
        max_value=50,
        step=1,
        value=10,
        help="Choose the exact number of slides for the presentation. Minimum 1 and maximum 50."
    )

    # Additional information input
    additional_info = st.text_area(
        "Enter any additional information or instructions for the presentation:",
        placeholder="e.g., Include Examples, focus on real-time applications, etc.",
        height=150,
    )

    return {
        "ppt_name": ppt_name,
        "theme": theme,
        "slide_count": slide_count,
        "additional_info": additional_info,
    }

def user_input():
    """Displays a text input field and returns the query entered by the user."""
    return st.text_input("Enter your query:")

def display_retrieved_content(retrieved_content):
    """Displays the retrieved content from the database."""
    st.subheader("Retrieved Content:")
    st.text_area("Embeddings Retrieved:", value=retrieved_content, height=200)

def display_refined_response(response):
    """Displays the refined response generated by the model."""
    st.subheader("Refined Response:")
    st.text_area("Refined Output:", value=response, height=200)

def display_warning(message):
    """Displays a warning message if no relevant content is found."""
    st.warning(message)

def handle_submission(query):
    """Handles the submission process, ensuring fetching of embeddings only happens when 'Submit' is pressed."""
    submit_button = st.button("Submit")
    if submit_button:
        if query:
            st.session_state['submit_clicked'] = True
        else:
            display_warning("Please enter a query before submitting.")

# Main function to render Streamlit app
